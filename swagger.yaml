# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Forum Engine API
  description: Forum Engine API 
  version: "1.0.0"
# the domain of the service
host: gforumengine.appspot.com
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /api/v1
produces:
  - application/json
paths:
  /categories:
    get:
      summary: Category List
      description: |
        Return the list of categories
      parameters:
        - name: Authorization
          in: header
          type: string
          description: Identifies the user
      tags:
        - Category
      responses:
        200:
          description: Array of Category
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Save a Category
      description: |
        Saves a new Category
      
      tags:
        - Category
      responses:
        200:
          description: Return the new Category
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /users:
    get:
      summary: Users List
      description: Return the users
      tags:
        - Users
      responses:
        200:
          description: Array of users
          schema: 
            $ref: '#/definitions/ForumUsersList'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Save an User
      description: |
        Saves a new User
      tags:
        - Users
      parameters:
        - name: body
          in: body
          description: User object
          schema:
            $ref: '#/definitions/ForumUser'
      responses:
        200:
          description: Return the new User
          schema:
            type: array
            items:
              $ref: '#/definitions/ForumUser'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /users/{id}:
    get:
      summary: Get User
      description: Return a User by id
      tags:
        - User
      parameters:
        - name: id
          in: path
          type: number
          format: integer
          required: true
      responses:
        200:
          description: Return a User
          schema:
            $ref: '#/definitions/ForumUser'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
    put:
      summary: Updates a User
      description: Update a user
      tags:
        - User
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ForumUser'
      responses:
        200:
          description: Return the updated user
          schema:
            $ref: '#/definitions/ForumUser'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a User
      description: Delete a user by its id
      tags:
        - User
      parameters:
        - name: id
          in: path
          type: string
          required: true
      responses:
        200:
          description: Return the sucessful operation
          schema:
            $ref: '#/definitions/Success'
        default:
          description: Retorn the error object
          schema:
            $ref: '#/definitions/Error'
  
          
  /forums:
    get:
      summary: Forums List
      description: Return the forums
      tags:
        - Forum
      responses:
        200:
          description: Array of forums
          schema: 
            type: array
            items:
              $ref: '#/definitions/Forum'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Save an Forum
      description: |
        Saves a new Forum
      tags:
        - Forum
      responses:
        200:
          description: Return the new Forum
          schema:
            type: array
            items:
              $ref: '#/definitions/Forum'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /forums/{id}:
    get:
      summary: Get Forum
      description: Return a Forum by id
      tags:
        - Forum
      parameters:
        - name: id
          in: path
          type: number
          format: integer
          required: true
      responses:
        200:
          description: Return a Forum
          schema:
            $ref: '#/definitions/Forum'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
    put:
      summary: Updates a Forum
      description: Update a forum
      tags:
        - Forum
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: forum
          in: body
          schema:
            $ref: '#/definitions/Forum'
      responses:
        200:
          description: Return the updated forum
          schema:
            $ref: '#/definitions/Forum'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a Forum
      description: Delete a forum by its id
      tags:
        - Forum
      parameters:
        - name: id
          in: path
          type: string
          required: true
      responses:
        200:
          description: Return the sucessful operation
          schema:
            $ref: '#/definitions/Success'
        default:
          description: Retorn the error object
          schema:
            $ref: '#/definitions/Error'
  
            
  /settings/forum:
    get:
      summary: Get Forum Settings
      description: Return the Forum Settings
      tags:
        - Forum 
        - Forum Settings
      responses:
        200:
          description: Return the Forum Settings
          schema:
            $ref: '#/definitions/SettingsForum'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:

  Category:
    type: object
    properties:
      name:
        type: string
        description: Category name
      description:
        type: string
        description: Description of the category
      createdAt: 
        type: string
        description: When category was created
      updatedAt:
        type: string
        description: When category was updated
    
  ForumUser:
    type: object
    properties:
      id:
        type: string
        description: ID of the user
      firstName:
        type: string
        description: First Name of the User
      lastName:
        type: string
        description: Last Name of the User
      userName:
        type: string
        description: Username of the User
      password:
        type: string
        description: Password
      email:
        type: string
        description: E-mail do usuario
      status:
        type: string
        description: User status
        enum:
          - ACTIVE
          - INACTIVE
      source:
        type: string
        description: Where this user came from?
        enum:
          - FORUM
          - FACEBOOK
          - GOOGLE
      numMessages:
        type: number
        format: integer
      signature:
        type: string
        description: Signature of the user
      createdAt: 
        type: string
        description: When user was created
      updatedAt:
        type: string
        description: When user was updated
      
  Forum:
    type: object
    properties:
      id:
        type: string
        description: Forum ID
      category:
        $ref: '#/definitions/Category'
      title:
        type: string
        description: Forum title
      innerType:
        type: string
        enum:
          - FORUM
          - MESSAGE
      description:
        type: string
        description: Forum description
      status:
        type: string
        description: Forum status
        enum:
          - OPEN
          - CLOSED
      numMessages:
        type: number
        format: integer
        description: Number of messages on this Forum
      numViews:
        type: number
        format: integer
        description: Number of visualizations on this Forum
      createdBy:
        $ref: '#/definitions/ForumUser'
      createdAt: 
        type: string
        description: When user was created
      updatedAt:
        type: string
        description: When user was updated
        
  SettingsForum:
    type: object
    properties:
      showUserSignature:
        type: boolean
      
  Success:
    type: object
    properties:
      code:
        type: integer
        description: Response code
      response: 
        type: string
        enum:
          - success
      description:
        type: string
        
  ForumUsersList:
    type: object
    properties:
      pagination:
        $ref: '#/definitions/Pagination'
      records:
        type: array
        description: List of Users
        items:
          $ref: '#/definitions/ForumUser'
        
      resource:
        type: string
        description: Name of the resource beeing returned
        enum:
          - user
          - forum
          - category
        
      
  Pagination:
    type: object
    properties:
      page:
        type: number
        format: integer
        description: Indicates the actual page
      perPage:
        type: number
        format: integer
        description: Indicates the number of records per page
      total:
        type: number
        format: integer
        description: Total of records
      begin:
        type: number
        format: integer
        description: Beginning of the list
      end:
        type: number
        format: integer
        description: End of the list
      pages:
        type: number
        format: integer
        description: Total of pages
        
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
